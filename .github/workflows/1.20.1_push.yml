name: Build and Release (20.1)

on:
  push:
    paths:
      - '**.gradle'
      - '**.properties'
      - '**/src/**'
      - '.github/**'
    branches:
      - "20.1"
  workflow_dispatch:
    inputs:
      norelease:
        description: 'Do not publish'
        required: true
        default: 'false'

jobs:
  build:
    name: "Build"
    strategy:
      matrix:
        java: [17]
        os: [ubuntu-22.04, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Make Gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build --stacktrace --no-daemon

      - name: Capture build artifacts
        if: ${{ runner.os == 'ubuntu-22.04' && matrix.java == '17' }}
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/

  check-isdev:
    name: "Check isDev Status"
    runs-on: ubuntu-22.04
    needs: build
    outputs:
      isDev: ${{ steps.check-isdev.outputs.isDev }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check isDev status
        id: check-isdev
        run: |
          isDev=$(grep -E '^isDev=' gradle.properties | cut -d'=' -f2)
          echo "isDev=$isDev"
          echo "isDev=$isDev" >> $GITHUB_OUTPUT

  publish:
    name: "Publish to CurseForge and Modrinth"
    runs-on: ubuntu-22.04
    needs: check-isdev
    if: ${{ needs.check-isdev.outputs.isDev == 'false' && !contains(github.event.head_commit.message, '[norelease]') && !contains(github.event.head_commit.message, '[ci skip]') && github.event.inputs.norelease != 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Publish to CurseForge and Modrinth
        uses: gradle/actions/setup-gradle@v3
        env:
          CURSE_API_KEY: ${{ secrets.CURSE_API_KEY }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
        with:
          arguments: publish publishUnified --stacktrace --no-daemon
